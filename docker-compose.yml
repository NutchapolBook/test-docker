services:
  node-server: # ตั้งชื่อ container (เหมือน --name)
    container_name: node
    build: . # ตำแหน่ง dockerfile
    ports:
      - "8000:8000" # map port ออกมา เหมือน -p ใน docker run
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mysql:latest
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: root # กำหนด user ของ root mysql
      MYSQL_DATABASE: tutorial # กำหนด database เริ่มต้นของ mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      # - ./data:/var/lib/mysql # map mount path
      - mysql_data_test:/var/lib/mysql # map ด้วย docker volume เปลี่ยน path เป็น volumes ที่เราสร้างไปด้านล่างใน docker-compose
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: db # ระบุ host ที่จะให้ phpmyadmin ไปจัดการ ซึ่งสามารถใส่เป็นชื่อ container name (db) ได้เลย
      PMA_PORT: 3306 # ระบุ port ของ Database
      PMA_USER: root # ระบุ user ของ Database
      PMA_PASSWORD: root # ระบุ password ของ Database
    ports:
      - "8080:80"
    depends_on:
      - db
volumes:
  mysql_data_test: # กำหนดชื่อ volume ที่ต้องการจะสร้าง
    driver: local